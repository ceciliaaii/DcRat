name: Build DcRat Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      
    # Install 7Zip PowerShell Module
    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose

    # Add MSBuild to the PATH
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    # Install NuGet packages
    - name: Install NuGet Packages
      run: nuget restore DcRat.sln

    - name: ðŸ”§ Retarget all projects to .NET Framework 4.8
      shell: pwsh
      run: |
        Write-Host "Retargeting all .csproj files to .NET Framework 4.8..."
        Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object {
          (Get-Content $_.FullName) -replace '<TargetFrameworkVersion>v4\.[0-9]+</TargetFrameworkVersion>', '<TargetFrameworkVersion>v4.8</TargetFrameworkVersion>' | Set-Content $_.FullName
        }
        Write-Host "Retargeting complete."


    # Build solution
    - name: Build solution
      run: msbuild -nologo -v:m -p:Configuration=${{ matrix.configuration }} DcRat.sln
        
    # Build Artifact
    - name: Build Artifact
      shell: cmd
      run: call .\ArtifactBuild.cmd
      
    # Delete-tag-and-release
    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true # default: false
        tag_name: AutoBuild # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Create Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: AutoBuild
        release_name: AutoBuild
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: true
        
    # Upload Release Asset
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DcRat.zip
        asset_name: DcRat.zip
        asset_content_type: application/zip
